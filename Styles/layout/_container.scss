/**
 * -----------------------------------------------------------------------------
 * $CONTAINER
 * -----------------------------------------------------------------------------
 */

/**
 * Control layout of elements within a container.
 *
 * 1. This makes IE recalculate the height of elements, preventing the container
 *    being much taller than its content.
 */

 .container {
    display: block;
    min-height: 1px; /* 1. */
    position: relative;
}

.container--contained {
    margin-left: auto;
    margin-right: auto;

    max-width: $width-content;
    width: 100%;
}

.container--contained-wide {
    margin-left: auto;
    margin-right: auto;
    max-width: $width-content-large;
    @include rem(padding-left, $spacing-default);
    @include rem(padding-right, $spacing-default);
    width: 100%;
}

.container--content {
    > * {
        margin-left: auto;
        margin-right: auto;
    }

    > *:not( .is-width-wide ):not( .is-width-full ):not( .hero ):not( .container ) {
        max-width: $width-content;
        @include rem(padding-left, $spacing-default);
        @include rem(padding-right, $spacing-default);
    }

    > .is-width-wide,
    > .is-width-full,
    > .hero {
        margin-left: auto;
        margin-right: auto;
    }
    
    > .is-width-wide {
        max-width: $width-content-large;
        @include rem(padding-left, $spacing-default);
        @include rem(padding-right, $spacing-default);
    }

    > .is-width-full,
    > .hero {
        max-width: 100%;
    }

    &-wide > *:not( .is-width-wide ):not( .is-width-full ):not( .hero ) {
        margin-left: auto;
        margin-right: auto;
        max-width: $width-content-large;
    }
}

.container--content-wide\@desktop {
    @include bp-min-width($bp-desktop) {
        > *:not(img) {
            margin-left: auto;
            margin-right: auto;
            max-width: $width-content-large;
        }
    }
}